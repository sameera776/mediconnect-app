{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uday Sameera\\\\OneDrive\\\\Desktop\\\\MediConnect_JS\\\\frontend\\\\src\\\\components\\\\AdminInventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jwtDecode } from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminInventory() {\n  _s();\n  const [medicines, setMedicines] = useState([]);\n  const [newMedicine, setNewMedicine] = useState({\n    name: \"\",\n    stock: 0\n  });\n  const [isAdmin, setIsAdmin] = useState(false);\n  const fetchMedicines = () => {\n    axios.get(\"http://localhost:5000/api/medicines/all\").then(res => setMedicines(res.data)).catch(err => console.error(err));\n  };\n  useEffect(() => {\n    fetchMedicines();\n\n    // ✅ Check if user is admin\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      try {\n        const decoded = jwtDecode(token);\n        if (decoded.email === \"admin@gmail.com\") {\n          setIsAdmin(true);\n        }\n      } catch (err) {\n        console.error(\"Invalid token\", err);\n      }\n    }\n  }, []);\n  const handleAdd = () => {\n    axios.post(\"http://localhost:5000/api/medicines/add\", newMedicine).then(() => {\n      fetchMedicines();\n      setNewMedicine({\n        name: \"\",\n        stock: 0\n      });\n    }).catch(err => console.error(err));\n  };\n  const handleDelete = id => {\n    axios.delete(`http://localhost:5000/api/medicines/delete/${id}`).then(() => fetchMedicines()).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pharmacy Inventory (Admin)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Add New Medicine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Medicine Name\",\n        value: newMedicine.name,\n        onChange: e => setNewMedicine({\n          ...newMedicine,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Stock\",\n        value: newMedicine.stock,\n        onChange: e => setNewMedicine({\n          ...newMedicine,\n          stock: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAdd,\n        children: \"Add Medicine\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"Access denied: Not an admin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Current Stock\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: medicines.map(med => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [med.name, \" (\", med.stock, \")\", isAdmin && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(med.id),\n          children: \"\\u274C Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this)]\n      }, med.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminInventory, \"LCDnA9nVSw2egRsuQyNguIImWgc=\");\n_c = AdminInventory;\nexport default AdminInventory;\nvar _c;\n$RefreshReg$(_c, \"AdminInventory\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwtDecode","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminInventory","_s","medicines","setMedicines","newMedicine","setNewMedicine","name","stock","isAdmin","setIsAdmin","fetchMedicines","get","then","res","data","catch","err","console","error","token","localStorage","getItem","decoded","email","handleAdd","post","handleDelete","id","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","style","color","map","med","_c","$RefreshReg$"],"sources":["C:/Users/Uday Sameera/OneDrive/Desktop/MediConnect_JS/frontend/src/components/AdminInventory.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { jwtDecode } from \"jwt-decode\";\r\n\r\nfunction AdminInventory() {\r\n  const [medicines, setMedicines] = useState([]);\r\n  const [newMedicine, setNewMedicine] = useState({ name: \"\", stock: 0 });\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n\r\n  const fetchMedicines = () => {\r\n    axios\r\n      .get(\"http://localhost:5000/api/medicines/all\")\r\n      .then((res) => setMedicines(res.data))\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMedicines();\r\n\r\n    // ✅ Check if user is admin\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      try {\r\n        const decoded = jwtDecode(token);\r\n        if (decoded.email === \"admin@gmail.com\") {\r\n          setIsAdmin(true);\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Invalid token\", err);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const handleAdd = () => {\r\n    axios\r\n      .post(\"http://localhost:5000/api/medicines/add\", newMedicine)\r\n      .then(() => {\r\n        fetchMedicines();\r\n        setNewMedicine({ name: \"\", stock: 0 });\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios\r\n      .delete(`http://localhost:5000/api/medicines/delete/${id}`)\r\n      .then(() => fetchMedicines())\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>Pharmacy Inventory (Admin)</h2>\r\n\r\n      {isAdmin ? (\r\n        <>\r\n          <h4>Add New Medicine</h4>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Medicine Name\"\r\n            value={newMedicine.name}\r\n            onChange={(e) =>\r\n              setNewMedicine({ ...newMedicine, name: e.target.value })\r\n            }\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Stock\"\r\n            value={newMedicine.stock}\r\n            onChange={(e) =>\r\n              setNewMedicine({ ...newMedicine, stock: e.target.value })\r\n            }\r\n          />\r\n          <button onClick={handleAdd}>Add Medicine</button>\r\n        </>\r\n      ) : (\r\n        <p style={{ color: \"red\" }}>Access denied: Not an admin</p>\r\n      )}\r\n\r\n      <h4>Current Stock</h4>\r\n      <ul>\r\n        {medicines.map((med) => (\r\n          <li key={med.id}>\r\n            {med.name} ({med.stock})\r\n            {isAdmin && (\r\n              <button onClick={() => handleDelete(med.id)}>❌ Delete</button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminInventory;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}